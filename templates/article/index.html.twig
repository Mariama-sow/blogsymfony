{% extends 'base.html.twig' %}

{% block title %}Articles publiés{% endblock %}

{% block body %}
<div class="container">
    <div class="page-header">
        <h1 class="page-title gradient-text">
            <i class="fas fa-newspaper"></i>
            Nos Articles
        </h1>
        <p class="page-subtitle">Découvrez nos dernières publications</p>
    </div>

    {% if is_granted('ROLE_ADMIN') or is_granted('ROLE_EDITEUR') %}
    <div style="text-align: right; margin-bottom: 20px;">
        <a href="{{ path('app_article_new') }}" class="btn btn-success">
            <i class="fas fa-plus"></i> Nouvel article
        </a>
    </div>
    {% endif %}
    <!-- Search and Filter Section -->
    <div class="search-card card-glass">
        {{ form_start(searchForm) }}
        <div class="search-grid">
            <div class="search-field">
                {{ form_row(searchForm.query, {
                    'attr': {
                        'class': 'search-input',
                        'placeholder': 'Rechercher un article...'
                    }
                }) }}
            </div>
            <div class="search-field">
                {{ form_row(searchForm.category, {
                    'attr': {
                        'class': 'search-select'
                    }
                }) }}
            </div>
            <div class="tags-field">
                <div id="tags-container" data-prototype="{{ form_widget(searchForm.tags.vars.prototype)|e('html_attr') }}">
                    {% for tag in searchForm.tags %}
                        <div class="tag-item">
                            {{ form_widget(tag, {
                                'attr': {
                                    'class': 'tag-input',
                                    'placeholder': 'Tag...'
                                }
                            }) }}
                            <button type="button" class="tag-remove">
                                <i class="fas fa-times"></i>
                            </button>
                        </div>
                    {% endfor %}
                </div>
                <button type="button" class="btn btn-outline btn-add-tag">
                    <i class="fas fa-plus"></i>
                    Ajouter un tag
                </button>
            </div>
            <button type="submit" class="btn btn-primary btn-search">
                <i class="fas fa-search"></i>
                Filtrer
            </button>
        </div>
        {{ form_end(searchForm) }}
    </div>

    <!-- Articles Grid -->
    <div class="articles-grid">
        {% for article in articles %}
        <div class="article-card card-glass" data-aos="fade-up">
            {% if article.image %}
            <div class="article-image">
                <img src="{{ asset('uploads/' ~ article.image) }}" alt="{{ article.title }}">
                <div class="image-overlay"></div>
                <div class="article-badge">
                    <span class="badge-category">{{ article.category ? article.category.name : 'Non catégorisé' }}</span>
                </div>
            </div>
            {% endif %}
            
            <div class="article-content">
                <div class="article-meta">
                    <span class="meta-date">
                        <i class="fas fa-calendar-alt"></i>
                        {{ article.createdAt|date('d/m/Y') }}
                    </span>
                    <span class="meta-author">
                        <i class="fas fa-user"></i>
                        {{ article.auteur ? article.auteur.email|split('@')|first : 'Anonyme' }}
                    </span>
                </div>
                
                <h3 class="article-title">{{ article.title }}</h3>
                
                <div class="article-excerpt">
                    {{ article.content|u.truncate(150, '...')|raw }}
                </div>
                
                <div class="article-footer">
                    <a href="{{ path('app_article_show', {'id': article.id}) }}" class="btn btn-read-more">
                        Lire la suite
                        <i class="fas fa-arrow-right"></i>
                    </a>
                    
                    {% if article.tags and article.tags|length > 0 %}
                    <div class="article-tags">
                        {% for tag in article.tags|slice(0, 3) %}
                        <span class="tag">{{ tag }}</span>
                        {% endfor %}
                        {% if article.tags|length > 3 %}
                        <span class="tag-more">+{{ article.tags|length - 3 }}</span>
                        {% endif %}
                    </div>
                    {% endif %}
                </div>
            </div>
        </div>
        {% else %}
        <div class="no-results card-glass">
            <div class="no-results-icon">
                <i class="fas fa-newspaper"></i>
            </div>
            <h3>Aucun article trouvé</h3>
            <p>Il n'y a pas encore d'articles publiés ou correspondant à votre recherche.</p>
            {% if is_granted('ROLE_ADMIN') or is_granted('ROLE_EDITEUR') %}
            <a href="{{ path('app_article_new') }}" class="btn btn-primary">
                <i class="fas fa-plus"></i>
                Créer un article
            </a>
            {% endif %}
        </div>
        {% endfor %}
    </div>
</div>

<!-- Floating Action Button -->
{% if is_granted('ROLE_ADMIN') %}
<a href="{{ path('app_article_new') }}" class="fab">
    <i class="fas fa-plus"></i>
</a>
{% endif %}

<style>
/* Base Container */
.container {
    max-width: 1400px;
    padding: 30px 20px;
    margin: 0 auto;
}

/* Page Header */
.page-header {
    text-align: center;
    margin-bottom: 40px;
    padding: 20px 0;
}

.page-title {
    font-size: 2.8rem;
    font-weight: 800;
    margin-bottom: 10px;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 15px;
}

.gradient-text {
    background: linear-gradient(135deg, #ff6b6b, #4ecdc4, #45b7d1);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
}

.page-subtitle {
    color: rgba(255, 255, 255, 0.7);
    font-size: 1.1rem;
    max-width: 700px;
    margin: 0 auto;
}

/* Glass Card Effect */
.card-glass {
    background: rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(15px);
    -webkit-backdrop-filter: blur(15px);
    border-radius: 20px;
    border: 1px solid rgba(255, 255, 255, 0.1);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
}

.card-glass:hover {
    transform: translateY(-5px);
    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.2);
}

/* Search Section */
.search-card {
    padding: 30px;
    margin-bottom: 40px;
}

.search-grid {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 20px;
}

.search-field {
    grid-column: span 1;
}

.tags-field {
    grid-column: span 2;
    display: flex;
    flex-direction: column;
    gap: 15px;
}

.btn-search {
    grid-column: span 1;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
}

.search-input {
    width: 100%;
    padding: 15px 20px;
    border-radius: 12px;
    border: none;
    background: rgba(255, 255, 255, 0.1);
    color: white;
    font-size: 1rem;
    transition: all 0.3s ease;
}

.search-input:focus {
    outline: none;
    background: rgba(255, 255, 255, 0.15);
    box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.3);
}

.search-select {
    width: 100%;
    padding: 15px 20px;
    border-radius: 12px;
    border: none;
    background: rgba(255, 255, 255, 0.1);
    color: white;
    font-size: 1rem;
    appearance: none;
    background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='white'%3e%3cpath d='M7 10l5 5 5-5z'/%3e%3c/svg%3e");
    background-repeat: no-repeat;
    background-position: right 15px center;
    background-size: 20px;
}

/* Tags System */
#tags-container {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
}

.tag-item {
    display: flex;
    align-items: center;
    background: rgba(102, 126, 234, 0.2);
    border-radius: 20px;
    padding: 5px 10px 5px 15px;
    transition: all 0.3s ease;
}

.tag-item:hover {
    background: rgba(102, 126, 234, 0.3);
}

.tag-input {
    background: transparent;
    border: none;
    color: white;
    min-width: 80px;
    padding: 5px 0;
}

.tag-input:focus {
    outline: none;
}

.tag-remove {
    background: none;
    border: none;
    color: rgba(255, 255, 255, 0.5);
    cursor: pointer;
    padding: 5px;
    transition: all 0.3s ease;
}

.tag-remove:hover {
    color: white;
}

.btn-add-tag {
    align-self: flex-start;
    padding: 10px 15px;
    font-size: 0.9rem;
}

/* Articles Grid */
.articles-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
    gap: 30px;
    margin-top: 20px;
}

.article-card {
    display: flex;
    flex-direction: column;
    overflow: hidden;
    transition: all 0.3s ease;
}

.article-image {
    position: relative;
    height: 200px;
    overflow: hidden;
}

.article-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s ease;
}

.article-card:hover .article-image img {
    transform: scale(1.05);
}

.image-overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 50%;
    background: linear-gradient(to top, rgba(0,0,0,0.7), transparent);
}

.article-badge {
    position: absolute;
    top: 15px;
    right: 15px;
    z-index: 2;
}

.badge-category {
    background: linear-gradient(45deg, #667eea, #764ba2);
    color: white;
    padding: 5px 15px;
    border-radius: 20px;
    font-size: 0.8rem;
    font-weight: 600;
}

.article-content {
    padding: 25px;
    flex: 1;
    display: flex;
    flex-direction: column;
}

.article-meta {
    display: flex;
    gap: 15px;
    margin-bottom: 15px;
    font-size: 0.85rem;
    color: rgba(255, 255, 255, 0.7);
}

.article-title {
    font-size: 1.5rem;
    font-weight: 700;
    margin-bottom: 15px;
    line-height: 1.4;
    color: white;
}

.article-excerpt {
    color: rgba(255, 255, 255, 0.8);
    line-height: 1.6;
    margin-bottom: 20px;
    flex: 1;
}

.article-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: auto;
}

.btn-read-more {
    background: transparent;
    color: #4ecdc4;
    padding: 0;
    font-weight: 600;
    display: flex;
    align-items: center;
    gap: 8px;
    transition: all 0.3s ease;
}

.btn-read-more:hover {
    color: white;
    transform: translateX(5px);
}

.article-tags {
    display: flex;
    gap: 8px;
    flex-wrap: wrap;
}

.tag {
    background: rgba(255, 255, 255, 0.1);
    color: rgba(255, 255, 255, 0.8);
    padding: 4px 10px;
    border-radius: 20px;
    font-size: 0.75rem;
}

.tag-more {
    background: rgba(255, 255, 255, 0.05);
    color: rgba(255, 255, 255, 0.5);
    padding: 4px 8px;
    border-radius: 20px;
    font-size: 0.75rem;
}

/* No Results */
.no-results {
    grid-column: 1 / -1;
    text-align: center;
    padding: 60px 30px;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.no-results-icon {
    font-size: 3rem;
    color: rgba(255, 255, 255, 0.2);
    margin-bottom: 20px;
}

.no-results h3 {
    font-size: 1.5rem;
    margin-bottom: 10px;
    color: white;
}

.no-results p {
    color: rgba(255, 255, 255, 0.7);
    max-width: 500px;
    margin-bottom: 25px;
}

/* Floating Action Button */
.fab {
    position: fixed;
    bottom: 30px;
    right: 30px;
    width: 60px;
    height: 60px;
    border-radius: 50%;
    background: linear-gradient(45deg, #667eea, #764ba2);
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.5rem;
    box-shadow: 0 10px 30px rgba(102, 126, 234, 0.5);
    transition: all 0.3s ease;
    z-index: 100;
}

.fab:hover {
    transform: translateY(-5px) scale(1.1);
    box-shadow: 0 15px 40px rgba(102, 126, 234, 0.6);
}

/* Animations */
[data-aos] {
    transition: all 0.6s ease;
}

[data-aos="fade-up"] {
    opacity: 0;
    transform: translateY(30px);
}

[data-aos].aos-animate {
    opacity: 1;
    transform: translateY(0);
}

/* Responsive */
@media (max-width: 1200px) {
    .search-grid {
        grid-template-columns: repeat(2, 1fr);
    }
    
    .tags-field {
        grid-column: span 2;
    }
    
    .btn-search {
        grid-column: span 2;
        height: auto;
    }
}

@media (max-width: 768px) {
    .page-title {
        font-size: 2.2rem;
    }
    
    .search-grid {
        grid-template-columns: 1fr;
    }
    
    .search-field, 
    .tags-field,
    .btn-search {
        grid-column: span 1;
    }
    
    .articles-grid {
        grid-template-columns: 1fr;
    }
}

@media (max-width: 480px) {
    .page-title {
        font-size: 1.8rem;
    }
    
    .search-card {
        padding: 20px;
    }
    
    .article-meta {
        flex-direction: column;
        gap: 8px;
    }
    
    .article-footer {
        flex-direction: column;
        align-items: flex-start;
        gap: 15px;
    }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Tags Management
    const tagsContainer = document.getElementById('tags-container');
    const addTagBtn = document.querySelector('.btn-add-tag');
    
    if (addTagBtn && tagsContainer) {
        addTagBtn.addEventListener('click', function() {
            const prototype = tagsContainer.dataset.prototype;
            const newWidget = prototype.replace(/__name__/g, tagsContainer.children.length);
            const tempDiv = document.createElement('div');
            tempDiv.innerHTML = newWidget.trim();
            const newTagItem = tempDiv.firstChild;
            
            // Create the tag item structure
            const tagItem = document.createElement('div');
            tagItem.className = 'tag-item';
            
            // Get the input from the prototype
            const input = newTagItem.querySelector('input');
            input.className = 'tag-input';
            input.placeholder = 'Tag...';
            
            // Create remove button
            const removeBtn = document.createElement('button');
            removeBtn.type = 'button';
            removeBtn.className = 'tag-remove';
            removeBtn.innerHTML = '<i class="fas fa-times"></i>';
            
            removeBtn.addEventListener('click', function() {
                tagItem.remove();
            });
            
            // Assemble the tag item
            tagItem.appendChild(input);
            tagItem.appendChild(removeBtn);
            
            // Add to container
            tagsContainer.appendChild(tagItem);
            
            // Focus on the new input
            input.focus();
        });
    }
    
    // Remove existing tags
    document.querySelectorAll('.tag-remove').forEach(btn => {
        btn.addEventListener('click', function() {
            this.closest('.tag-item').remove();
        });
    });
    
    // Initialize animations
    const articles = document.querySelectorAll('.article-card');
    articles.forEach((article, index) => {
        article.style.transitionDelay = `${index * 0.1}s`;
        article.classList.add('aos-animate');
    });
    
    // Smooth scroll for anchor links
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function(e) {
            e.preventDefault();
            const target = document.querySelector(this.getAttribute('href'));
            if (target) {
                target.scrollIntoView({
                    behavior: 'smooth',
                    block: 'start'
                });
            }
        });
    });
});
</script>
{% endblock %}